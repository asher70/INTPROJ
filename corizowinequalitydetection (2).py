# -*- coding: utf-8 -*-
"""corizowinequalitydetection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1igkd0OnqjjIvCb21BMU2P-zUzXGNSNZq
"""

import  pandas  as  pd
import  numpy  as  np
from  sklearn.impute  import  SimpleImputer
from  scipy  import  stats
from  sklearn.preprocessing  import  MinMaxScaler , StandardScaler
from  sklearn.model_selection  import  train_test_split
import  matplotlib.pyplot  as  plt
import  seaborn  as  sns
from  sklearn.model_selection  import  train_test_split
from  sklearn .metrics  import  mean_squared_error
from  sklearn.ensemble  import  RandomForestRegressor
from  sklearn.metrics  import  mean_squared_error ,  r2_score

data = pd.read_excel('/content/1788410-1767134-1729261-1613779-Red_wine__(1).xlsx')

minedaten=data.copy()

minedaten.describe()

minedaten.dtypes

print(minedaten.isnull().sum())

minedaten.fillna(minedaten.mean().iloc[0], inplace=True)

print(minedaten.isnull().sum())

numerical_cols=['fixed acidity','volatile acidity','citric acid','residual sugar','chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol','quality']
data_to_scale=minedaten[numerical_cols]
minedaten_scaled=minedaten.copy()
scaler=StandardScaler()
minedaten_scaled[numerical_cols]=scaler.fit_transform(data_to_scale )

minedaten_scaled.head()

print(minedaten_scaled.isnull().sum())

z_scores = np.abs(stats.zscore(minedaten_scaled))
threshold = 3
outlier_indexes = np.where(z_scores > threshold)
outliers_zscore = minedaten_scaled.iloc[outlier_indexes[0]]

Q1 = minedaten_scaled.quantile(0.25)
Q3 = minedaten_scaled.quantile(0.75)
IQR = Q3 - Q1
outliers_iqr = minedaten_scaled[((minedaten_scaled < (Q1 - 1.5 * IQR)) | (minedaten_scaled > (Q3 + 1.5 * IQR))).any(axis=1)]



plt.figure(figsize=(10, 6))
sns.boxplot(data=outliers_iqr)
plt.title("Box Plot of Wine Attributes")
plt.xticks(rotation=45)
plt.show()

data_cleaned = minedaten_scaled.drop(outliers_iqr.index)

plt.figure(figsize=(10, 6))
sns.boxplot(data=data_cleaned )
plt.title("Box Plot of Wine Attributes")
plt.xticks(rotation=45)
plt.show()

X = (data_cleaned.drop(columns=['quality']))
y = (data_cleaned['quality'])
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print(X_train.shape)
print(y_train.shape)
print(X_test.shape)
print(y_test.shape)

random_forest_model = RandomForestRegressor(n_estimators=100, random_state=42)

random_forest_model.fit(X_train, y_train)

y_pred = random_forest_model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error (MSE):", mse)
print("R-squared (R2):", r2)